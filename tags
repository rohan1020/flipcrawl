!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#searchForm	app/assets/stylesheets/application.css	/^#searchForm{$/;"	i
.coverpic	app/assets/stylesheets/application.css	/^.coverpic{$/;"	c
.page-header	app/assets/stylesheets/bootstrap-generators.scss	/^.page-header {$/;"	c
ActiveSupport	test/test_helper.rb	/^class ActiveSupport::TestCase$/;"	c
Application	config/application.rb	/^  class Application < Rails::Application$/;"	c	class:Flipcrawl
ApplicationController	app/controllers/application_controller.rb	/^class ApplicationController < ActionController::Base$/;"	c
ApplicationHelper	app/helpers/application_helper.rb	/^module ApplicationHelper$/;"	m
Book	app/models/book.rb	/^class Book$/;"	c
BookCrawlJob	app/jobs/bookcrawljob.rb	/^class BookCrawlJob$/;"	c
BookInfoCrawl	lib/bookinfocrawl.rb	/^class BookInfoCrawl$/;"	c
BookInfoCrawlJob	app/jobs/bookinfocrawljob.rb	/^class BookInfoCrawlJob$/;"	c
BookInfoSaveDbJob	app/jobs/bookinfocrawljob.rb	/^class BookInfoSaveDbJob$/;"	c
BookSaveDbJob	app/jobs/bookcrawljob.rb	/^class BookSaveDbJob$/;"	c
BookTest	test/models/book_test.rb	/^class BookTest < ActiveSupport::TestCase$/;"	c
Bookinfo	app/models/bookinfo.rb	/^class Bookinfo$/;"	c
BookinfoTest	test/models/bookinfo_test.rb	/^class BookinfoTest < ActiveSupport::TestCase$/;"	c
BookinfosController	app/controllers/bookinfos_controller.rb	/^class BookinfosController < ApplicationController$/;"	c
BookinfosControllerTest	test/controllers/bookinfos_controller_test.rb	/^class BookinfosControllerTest < ActionController::TestCase$/;"	c
BookinfosHelper	app/helpers/bookinfos_helper.rb	/^module BookinfosHelper$/;"	m
BookinfosHelperTest	test/helpers/bookinfos_helper_test.rb	/^class BookinfosHelperTest < ActionView::TestCase$/;"	c
BooksController	app/controllers/books_controller.rb	/^class BooksController < ApplicationController$/;"	c
BooksControllerTest	test/controllers/books_controller_test.rb	/^class BooksControllerTest < ActionController::TestCase$/;"	c
BooksCrawl	lib/bookscrawl.rb	/^class BooksCrawl$/;"	c
BooksHelper	app/helpers/books_helper.rb	/^module BooksHelper$/;"	m
BooksHelperTest	test/helpers/books_helper_test.rb	/^class BooksHelperTest < ActionView::TestCase$/;"	c
CatCrawler	lib/catCrawler.rb	/^class CatCrawler$/;"	c
CategoriesController	app/controllers/categories_controller.rb	/^class CategoriesController < ApplicationController$/;"	c
CategoriesControllerTest	test/controllers/categories_controller_test.rb	/^class CategoriesControllerTest < ActionController::TestCase$/;"	c
CategoriesHelper	app/helpers/categories_helper.rb	/^module CategoriesHelper$/;"	m
CategoriesHelperTest	test/helpers/categories_helper_test.rb	/^class CategoriesHelperTest < ActionView::TestCase$/;"	c
Category	app/models/category.rb	/^class Category$/;"	c
CategoryTest	test/models/category_test.rb	/^class CategoryTest < ActiveSupport::TestCase$/;"	c
Flipcrawl	config/application.rb	/^module Flipcrawl$/;"	m
HtmlFetch	lib/htmlFetch.rb	/^class HtmlFetch$/;"	c
Post	app/models/post.rb	/^class Post$/;"	c
PostTest	test/models/post_test.rb	/^class PostTest < ActiveSupport::TestCase$/;"	c
PostsController	app/controllers/posts_controller.rb	/^class PostsController < ApplicationController$/;"	c
PostsControllerTest	test/controllers/posts_controller_test.rb	/^class PostsControllerTest < ActionController::TestCase$/;"	c
PostsHelper	app/helpers/posts_helper.rb	/^module PostsHelper$/;"	m
PostsHelperTest	test/helpers/posts_helper_test.rb	/^class PostsHelperTest < ActionView::TestCase$/;"	c
SubCatCrawl	app/jobs/subcatcrawl.rb	/^class SubCatCrawl$/;"	c
SubCatFinder	lib/SubCatFinder.rb	/^class SubCatFinder$/;"	c
body	app/assets/stylesheets/bootstrap-generators.scss	/^body {$/;"	t
book_params	app/controllers/books_controller.rb	/^    def book_params$/;"	f	class:BooksController
bookinfo_params	app/controllers/bookinfos_controller.rb	/^    def bookinfo_params$/;"	f	class:BookinfosController
bookinfocrawl	app/controllers/books_controller.rb	/^  def bookinfocrawl$/;"	f	class:BooksController
category_params	app/controllers/categories_controller.rb	/^    def category_params$/;"	f	class:CategoriesController
create	app/controllers/bookinfos_controller.rb	/^  def create$/;"	f	class:BookinfosController
create	app/controllers/books_controller.rb	/^  def create$/;"	f	class:BooksController
create	app/controllers/categories_controller.rb	/^  def create$/;"	f	class:CategoriesController
create	app/controllers/posts_controller.rb	/^  def create$/;"	f	class:PostsController
destroy	app/controllers/bookinfos_controller.rb	/^  def destroy$/;"	f	class:BookinfosController
destroy	app/controllers/books_controller.rb	/^  def destroy$/;"	f	class:BooksController
destroy	app/controllers/categories_controller.rb	/^  def destroy$/;"	f	class:CategoriesController
destroy	app/controllers/posts_controller.rb	/^  def destroy$/;"	f	class:PostsController
download_csv	app/controllers/bookinfos_controller.rb	/^  def download_csv$/;"	f	class:BookinfosController
edit	app/controllers/bookinfos_controller.rb	/^  def edit$/;"	f	class:BookinfosController
edit	app/controllers/books_controller.rb	/^  def edit$/;"	f	class:BooksController
edit	app/controllers/categories_controller.rb	/^  def edit$/;"	f	class:CategoriesController
edit	app/controllers/posts_controller.rb	/^  def edit$/;"	f	class:PostsController
fetch_doc	lib/htmlFetch.rb	/^  def self.fetch_doc(url)$/;"	F	class:HtmlFetch
for_url	lib/htmlFetch.rb	/^  def self.for_url(url)$/;"	F	class:HtmlFetch
generateUrl	lib/bookscrawl.rb	/^  def generateUrl(startNum)$/;"	f	class:BooksCrawl
getAllProductList	lib/bookscrawl.rb	/^  def getAllProductList$/;"	f	class:BooksCrawl
getAndSaveBookInfo	app/models/bookinfo.rb	/^  def self.getAndSaveBookInfo(book)$/;"	F	class:Bookinfo
getAndSaveBooks	app/models/book.rb	/^  def self.getAndSaveBooks(sid, startNum = 20)$/;"	F	class:Book
getAndSaveCats	app/models/category.rb	/^  def self.getAndSaveCats(url)$/;"	F	class:Category
getBookInfo	lib/bookinfocrawl.rb	/^  def getBookInfo$/;"	f	class:BookInfoCrawl
getCatList	lib/SubCatFinder.rb	/^  def getCatList$/;"	f	class:SubCatFinder
getPid	app/models/book.rb	/^  def self.getPid(theUrl)$/;"	F	class:Book
getProductList	lib/bookscrawl.rb	/^  def getProductList(startNum = 1)$/;"	f	class:BooksCrawl
index	app/controllers/bookinfos_controller.rb	/^  def index$/;"	f	class:BookinfosController
index	app/controllers/books_controller.rb	/^  def index$/;"	f	class:BooksController
index	app/controllers/categories_controller.rb	/^  def index$/;"	f	class:CategoriesController
index	app/controllers/posts_controller.rb	/^  def index$/;"	f	class:PostsController
initialize	lib/SubCatFinder.rb	/^  def initialize(url)$/;"	f	class:SubCatFinder
initialize	lib/bookinfocrawl.rb	/^  def initialize(url)$/;"	f	class:BookInfoCrawl
initialize	lib/bookscrawl.rb	/^  def initialize(sid)$/;"	f	class:BooksCrawl
new	app/controllers/bookinfos_controller.rb	/^  def new$/;"	f	class:BookinfosController
new	app/controllers/books_controller.rb	/^  def new$/;"	f	class:BooksController
new	app/controllers/categories_controller.rb	/^  def new$/;"	f	class:CategoriesController
new	app/controllers/posts_controller.rb	/^  def new$/;"	f	class:PostsController
perform	app/jobs/bookcrawljob.rb	/^  def self.perform(pList)$/;"	F	class:BookSaveDbJob
perform	app/jobs/bookcrawljob.rb	/^  def self.perform(sid)$/;"	F	class:BookCrawlJob
perform	app/jobs/bookinfocrawljob.rb	/^  def self.perform(bookdata)$/;"	F	class:BookInfoSaveDbJob
perform	app/jobs/bookinfocrawljob.rb	/^  def self.perform(pid)$/;"	F	class:BookInfoCrawlJob
perform	app/jobs/subcatcrawl.rb	/^  def self.perform(c)$/;"	F	class:SubCatCrawl
post_params	app/controllers/posts_controller.rb	/^    def post_params$/;"	f	class:PostsController
saveBookDataToDb	app/models/bookinfo.rb	/^  def self.saveBookDataToDb(bookData)$/;"	F	class:Bookinfo
saveCategories	lib/SubCatFinder.rb	/^  def saveCategories$/;"	f	class:SubCatFinder
saveListToDb	app/models/book.rb	/^  def self.saveListToDb(pList)$/;"	F	class:Book
search	app/controllers/bookinfos_controller.rb	/^  def search$/;"	f	class:BookinfosController
search	app/models/bookinfo.rb	/^  def self.search(q)$/;"	F	class:Bookinfo
searchForm	app/views/bookinfos/index.html.erb	/^<form action="\/search" id="searchForm" >$/;"	o
set_book	app/controllers/books_controller.rb	/^    def set_book$/;"	f	class:BooksController
set_bookinfo	app/controllers/bookinfos_controller.rb	/^    def set_bookinfo$/;"	f	class:BookinfosController
set_category	app/controllers/categories_controller.rb	/^    def set_category$/;"	f	class:CategoriesController
set_post	app/controllers/posts_controller.rb	/^    def set_post$/;"	f	class:PostsController
show	app/controllers/bookinfos_controller.rb	/^  def show$/;"	f	class:BookinfosController
show	app/controllers/books_controller.rb	/^  def show$/;"	f	class:BooksController
show	app/controllers/categories_controller.rb	/^  def show$/;"	f	class:CategoriesController
show	app/controllers/posts_controller.rb	/^  def show$/;"	f	class:PostsController
startCrawling	app/models/category.rb	/^  def self.startCrawling$/;"	F	class:Category
startWork	app/models/book.rb	/^  def self.startWork(cat)$/;"	F	class:Book
startWorking	app/controllers/categories_controller.rb	/^  def startWorking$/;"	f	class:CategoriesController
startbookCrawl	app/controllers/categories_controller.rb	/^  def startbookCrawl$/;"	f	class:CategoriesController
to_csv	app/models/bookinfo.rb	/^  def self.to_csv(options = {})$/;"	F	class:Bookinfo
update	app/controllers/bookinfos_controller.rb	/^  def update$/;"	f	class:BookinfosController
update	app/controllers/books_controller.rb	/^  def update$/;"	f	class:BooksController
update	app/controllers/categories_controller.rb	/^  def update$/;"	f	class:CategoriesController
update	app/controllers/posts_controller.rb	/^  def update$/;"	f	class:PostsController
